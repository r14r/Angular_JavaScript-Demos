<!doctype html>
<html ng-app="Demo">
<head>
	<meta charset="utf-8" />

	<title>
		Leverage CSS user-select For A Better User Experience (UX)
	</title>

	<style type="text/css">

		a.toggle {
			color: red ;
			cursor: pointer ;
			text-decoration: underline ;
		}

		/*
			By using the user-select CSS property (none), we can prevent accidental 
			high-lighting of the action text. This is not here to prevent the user 
			from copying the text; rather, it's here to prevent the user experience 
			from being sub-par.
		*/
		a.toggle.b {
			user-select: none ;
				-moz-user-select: none ;
				-ms-user-select: none ;
				-webkit-user-select: none ;
		}

		p.container {
			background-color: #FAFAFA ;
			border: 1px solid #CCCCCC ;
			border-radius: 3px 3px 3px 3px ;
			padding: 15px 15px 15px 15px ;
		}

	</style>
</head>
<body ng-controller="AppController">

	<h1>
		Leverage CSS user-select For A Better User Experience (UX)
	</h1>

	<p>
		<a ng-click="toggleContainer()" class="toggle a">Toggle Container</a>
		&mdash;
		<a ng-click="toggleContainer()" class="toggle b">Toggle Container</a>
	</p>

	<p ng-if="isShowingContainer" class="container">
		Roads? Where we're going, we don't need roads.
	</p>


	<!-- Load scripts. -->
	<script type="text/javascript" src="../../vendor/angularjs/angular-1.4.5.min.js"></script>
	<script type="text/javascript">

		// I control the root of the application.
		angular.module( "Demo", [] )
			.controller(
				"AppController",
				function AppController( $scope ) {

					// I determine if the container is currently visible.
					$scope.isShowingContainer = false;

					// I toggle the visibility of the container.
					$scope.toggleContainer = function() {

						$scope.isShowingContainer = ! $scope.isShowingContainer;

					};

				}
			)
		;

	</script>

</body>
</html>