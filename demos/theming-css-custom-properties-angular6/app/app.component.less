
// CAUTION: CSS Custom Properties (aka CSS variables) are not supported in IE. As such,
// we're going to be using PostCSS to inject fallback values for our dynamic properties
// during the "build step". In order to do this without duplicating the list of values
// in two different files, we're going to define an "IE FALLBACK" block below which will
// be parsed and used to define the "variables" collection.
// --
// NOTE: The "postcss-loader" can technically use the :root block to perform this
// variables look-up; however, that would require us to have a :root block. And, it would
// require that said :root block to be in all of the components that have CSS files. In
// this application, that makes no sense. Parsing an explicit block in the code makes
// way more sense.

// ----------------------------------------------------------------------------------- //
// ----------------------------------------------------------------------------------- //

// Define all the CSS custom properties for the Light Theme.
// --
// NOTE: These will be available in all descendant components.
:host( .light-theme ) {
	// === BEGIN IE FALLBACK ===
	--background-color: #ffffff ;
	--color: #333333 ;

	--canvas-background-color: #fafafa ;
	--canvas-color: #333333 ;
	--canvas-border-color: #cccccc ;
	--canvas-gutter-background-color: #e0e0e0 ;
	--canvas-gutter-color: #999999 ;

	--panel-background-color: #f0f0f0 ;
	--panel-color: #161616 ;
	--panel-input-background-color: #ffffff ;
	--panel-input-color: #333333 ;
	--panel-button-background-color: #e0e0e0 ;
	--panel-button-color: #121212 ;
	--panel-button-border-color: #666666 ;
	// === END IE FALLBACK ===
}

// Define all the CSS custom properties for the Dark Theme.
// --
// NOTE: These will be available in all descendant components.
:host( .dark-theme ) {
	--background-color: #121212 ;
	--color: #f0f0f0 ;

	--canvas-background-color: #282923 ;
	--canvas-color: #f8f8f2 ;
	--canvas-border-color: #42433f ;
	--canvas-gutter-background-color: #20211C ;
	--canvas-gutter-color: #999999 ;

	--panel-background-color: #20211C ;
	--panel-color: #999999 ;
	--panel-input-background-color: #2e2f28 ;
	--panel-input-color: #dadada ;
	--panel-button-background-color: #121212 ;
	--panel-button-color: #dadada ;
	--panel-button-border-color: #333333 ;
}

// ----------------------------------------------------------------------------------- //
// ----------------------------------------------------------------------------------- //

:host {
	background-color: var( --background-color ) ;
	color: var( --color ) ;
	display: block ;
	font-size: 18px ;
	min-height: 100vh ;
	padding: 1px 20px 1px 20px ;
}

.layout {
	margin: 0px auto 0px auto ;
	width: 650px ;

	&__header {}

	&__canvas {
		margin: 20px 0px 20px 0px ;
	}

	&__tools {
		display: flex ;
		margin-bottom: 20px ;
	}

	&__left-panel {
		flex: 1 1 50% ;
		margin-right: 30px ;
	}

	&__right-panel {
		flex: 1 1 50% ;
	}

	&__footer {
		// By default, we're going to HIDE the option to SWITCH THEMES. We'll only show
		// it once we know that we are in a browser that actually supports CSS custom
		// properties.
		display: none ;
		margin-bottom: 20px ;

		// If the CSS parser supports the assignment of a CSS custom property (the key
		// and value in this case doesn't matter), then it is safe to show the SWITCH
		// THEMES tooling to the user.
		@supports ( --foo: "bar" ) {
			display: block ;
		}
	}
}

a {
	cursor: pointer ;
	text-decoration: underline ;
	user-select: none ;
}
