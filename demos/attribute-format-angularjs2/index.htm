<!doctype html>
<html>
<head>
	<meta charset="utf-8" />

	<title>
		Attributes Are Not Normalized In AngularJS 2 Beta 1
	</title>
</head>
<body>

	<h1>
		Attributes Are Not Normalized In AngularJS 2 Beta 1
	</h1>

	<my-app>
		Loading...
	</my-app>

	<!-- Load demo scripts. -->
	<script type="text/javascript" src="../../vendor/angularjs-2-beta/1/es6-shim.min.js"></script>
	<script type="text/javascript" src="../../vendor/angularjs-2-beta/1/Rx.umd.min.js"></script>
	<script type="text/javascript" src="../../vendor/angularjs-2-beta/1/angular2-polyfills.min.js"></script>
	<script type="text/javascript" src="../../vendor/angularjs-2-beta/1/angular2-all.umd.min.js"></script>
	<!-- AlmondJS - minimal implementation of RequireJS. -->
	<script type="text/javascript" src="../../vendor/angularjs-2-beta/1/almond.js"></script>
	<script type="text/javascript">

		// Defer bootstrapping until all of the components have been declared.
		// --
		// NOTE: Not all components have to be required here since they will be 
		// implicitly required by other components.
		requirejs(
			[ "AppComponent" ],
			function run( AppComponent ) {

				ng.platform.browser.bootstrap( AppComponent );

			}
		);


		// --------------------------------------------------------------------------- //
		// --------------------------------------------------------------------------- //


		// I provide the root application component.
		define(
			"AppComponent",
			[ "ColorMe" ],
			function registerAppComponent( ColorMe ) {

				// Configure the App component definition.
				var AppComponent = ng.core
					.Component({
						selector: "my-app",
						directives: [ ColorMe ],
						template:
						`
							<p [colorMe]=" '#FF0099' ">
								1. Color me pink!
							</p>

							<p bind-colorMe=" '#FF0099' ">
								2. Color me pink!
							</p>

							<p bindColorMe=" '#FF0099' ">
								3. Color me pink!
							</p>

							<p data-bind-colorMe=" '#FF0099' ">
								4. Color me pink!
							</p>

							<p data-bindColorMe=" '#FF0099' ">
								5. Color me pink!
							</p>

							<p x-bind-colorMe=" '#FF0099' ">
								6. Color me pink!
							</p>

							<p data-[colorMe]=" '#FF0099' ">
								7. Color me pink!
							</p>

							<p colorMe="#FF0099">
								8. Color me pink!
							</p>

							<p data-colorMe="#FF0099">
								9. Color me pink!
							</p>

							<p color-me="#FF0099">
								10. Color me pink!
							</p>

							<p color:me="#FF0099">
								11. Color me pink!
							</p>

							
							<!--
								If uncommented, these two actually throw an error because
								they are trying to bind on unknown input properties:
							-->
							<!--
							<p [color-me]=" '#FF0099' ">
								Color me pink!
							</p>

							<p bind-color-me=" '#FF0099' ">
								Color me pink!
							</p>
							-->							
						`
					})
					.Class({
						constructor: function AppController() {

							// ... nothing to do.
							
						}
					})
				;

				return( AppComponent );

			}
		);


		// --------------------------------------------------------------------------- //
		// --------------------------------------------------------------------------- //


		// I provide a directive that sets the host text color using the colorMe property.
		define(
			"ColorMe",
			function registerColorMe() {

				// Configure the ColorMe directive definition.
				// --
				// NOTE: In this case, the directive attribute selector is also a 
				// bindable property.
				var ColorMeDirective = ng.core
					.Directive({
						selector: "[colorMe]",
						inputs: [ "colorMe" ],
						host: {
							"[style.color]": "colorMe"
						}
					})
					.Class({
						constructor: function ColorMeController() {

							console.log( "ColorMe instantiated." );

						}
					})
				;

				return( ColorMeDirective );

			}
		);

	</script>

</body>
</html>