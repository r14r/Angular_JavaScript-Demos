<!doctype html>
<html ng-app="Demo">
<head>
	<meta charset="utf-8" />

	<title>
		Centering Dynamically-Sized Elements With CSS3 2D Transforms
	</title>

	<style type="text/css">

		div.x-rule {
			background-color: #999999 ;
			height: 1px ;
			left: 0px ;
			position: fixed ;
			right: 0px ;
			top: 50% ;
		}

		div.y-rule {
			background-color: #999999 ;
			bottom: 0px ;
			left: 50% ;
			position: fixed ;
			top: 0px ;
			width: 1px ;
		}

		ul.friends {
			background-color: #F0F0F0 ;
			border: 1px solid #CCCCCC ;
			border-radius: 3px 3px 3px 3px ;
			font-size: 200% ;
			margin: 0px 0px 0px 0px ;
			padding: 10px 10px 10px 10px ;
			list-style-type: none ;
			position: fixed ;
			white-space: nowrap ;
			z-index: 2 ;

			/* Position the top-left CORNER of the element in the center of the page. */
			left: 50% ;
			top: 50% ;

			/* 
				Now, with the CORNER of the element centered, we want to offset the 
				element so that the MIDDLE of the element is in the center of the page.

				This works because PERCENTAGE values, in a 2D transform, are relative to
				the size of the bounding box (of the current element) and NOT relative to
				the parent container.
				--
				NOTE: IE 11 (the version that I tested on my virtual machine, at least)
				doesn't seem to like translate(X,Y). I had to fallback to defining each
				offset individually.
			*/
			transform: translateX( -50% ) translateY( -50% ) ;
				-moz-transform: translateX( -50% ) translateY( -50% ) ;
				-ms-transform: translateX( -50% ) translateY( -50% ) ;
				-webkit-transform: translateX( -50% ) translateY( -50% ) ;
		}

		ul.friends li {
			margin: 0px 0px 0px 0px ;
			padding: 4px 4px 4px 4px ;
		}

	</style>
</head>
<body ng-controller="AppController">

	<h1>
		Centering Dynamically-Sized Elements With CSS3 2D Transforms
	</h1>

	<!-- 
		This element here is going to grow to accommodate the dimensions of its content.
		As it does this, it will automatically be centered based on the translateX() 
		and translateY() CSS3 2D transformations. 
	-->
	<ul class="friends">
		<li ng-repeat="friend in friends">
			{{ friend }}
		</li>
	</ul>

	<!-- Allow us to dynamically add content to the above box. -->
	<form ng-submit="processForm()">
		<input type="text" ng-model="form.name" />
		<input type="submit" value="Add Friend" />
	</form>

	<!-- X/Y axis to see centering better. -->
	<div class="x-rule"></div>
	<div class="y-rule"></div>


	<!-- Load scripts. -->
	<script type="text/javascript" src="../../vendor/angularjs/angular-1.4.3.js"></script>
	<script type="text/javascript">

		// Create an application module for our demo.
		angular.module( "Demo", [] );


		// --------------------------------------------------------------------------- //
		// --------------------------------------------------------------------------- //


		// I control the root of the demo.
		angular.module( "Demo" ).controller(
			"AppController",
			function AppController( $scope ) {

				// I hold the list of friends to render.
				$scope.friends = [ "Joanna", "Sarah", "Kim" ];

				// I hold the form data (for ng-model bindings).
				$scope.form = {
					name: ""
				};


				// ---
				// PUBLIC METHODS.
				// ---

				
				// I process the form, adding a new friend to the list.
				$scope.processForm = function() {

					if ( $scope.form.name ) {

						$scope.friends.push( $scope.form.name );

						$scope.form.name = "";

					}

				};

			}
		);

	</script>

</body>
</html>